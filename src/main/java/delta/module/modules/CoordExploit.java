package delta.module.modules;


import delta.command.Command;
import delta.event.PacketEvent;
import delta.module.Category;
import delta.module.Module;
import delta.setting.Setting;
import delta.util.MessageUtils;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.network.play.server.SPacketBlockChange;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.ChunkPos;
import net.minecraft.util.text.TextFormatting;


public class CoordExploit extends Module {

    public CoordExploit() {
        super("CoordExploitResolver", "nocom skid", Category.MISC);
    }

    public Setting loadChunks = setting("LoadedChunks", true);
    public Setting ignore = setting("Ignore", true);


    private long startTime = -1;
    private int messageTime = 0;

    //
    public void onUpdate() {
        messageTime++;
    }


    public void onUpdate(PacketEvent.Receive event) {
        if (event.getPacket() instanceof SPacketBlockChange) {
            SPacketBlockChange packetIn = (SPacketBlockChange) event.getPacket();
            if (ignore.getBVal() && mc.world.isBlockLoaded(packetIn.getBlockPosition(), false))
                return;
            ChunkPos chunkPos = new ChunkPos(packetIn.getBlockPosition());
            if (mc.player.getDistanceSq(packetIn.getBlockPosition()) > 72) {
                if (loadChunks.getBVal()) {
                    mc.world.doPreChunk(chunkPos.x, chunkPos.z, true);
                    mc.world.markBlockRangeForRenderUpdate(chunkPos.x << 4, 0, chunkPos.z << 4, (chunkPos.x << 4) + 15, 256, (chunkPos.z << 4) + 15);
                }
            }
            if (!loadChunks.getBVal() && mc.player.getDistanceSq(packetIn.getBlockPosition()) > 500 * 500)
                event.setCancelled(true);
            MessageUtils.sendMessage("[DL]: " +
                    packetIn.getBlockPosition() + " -> " + packetIn.getBlockState().getBlock().getLocalizedName());

            MessageUtils.sendMessage("Latency = " + (System.currentTimeMillis() - startTime) + " ms");
            startTime = -1;

        }
    }

    public String getDimension(int id) {
        if (id == 1) return "End";
        else if (id == 0) return "Overworld";
        else if (id == -1) return "Nether";
        return "null";
    }


    @Override
    public void onEnable() {
        super.onEnable();
        if (mc.world == null)
            return;
        BlockPos pos = new BlockPos(-2518, 68, -5341);
        startTime = System.currentTimeMillis();

    }


    @Override
    public void onDisable() {
        super.onDisable();
        startTime = -1;
    }
}