package delta.module.modules;

import delta.module.Category;
import delta.module.Module;
import delta.setting.Setting;
import delta.util.MessageUtils;

import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.network.play.client.CPacketPlayerTryUseItemOnBlock;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;

public class CoordExploitSpiral extends Module {

    int spiralX, spiralZ;
    int x,z;
    int centerx,centerz;
    int steps;
    boolean isSkipping=false;

    public CoordExploitSpiral() {
        super("CoordExploitSender","sends packets for coord exploit" , Category.MISC);
    }

    @Override
    public void onEnable() {
        spiralX = 144;
        spiralZ = 144;
        centerx = 0;
        centerz = 0;
        steps = 144;
    }
    public Setting amountPerTick = setting("PacketsPerTick", 5, 1, 10, true);


    @Override
    public void onUpdate() {
        if (mc.player == null || mc.player.connection == null)
            return;

        for (int i = 0; i < amountPerTick.getDVal(); i++) {
            x = spiralX + centerx; //add to move center
            z = spiralZ + centerz; // ^
            mc.player.connection.sendPacket(new CPacketPlayerTryUseItemOnBlock(new BlockPos(x, 1, z), EnumFacing.UP, EnumHand.MAIN_HAND, 0, 0, 0));
            //
            //if skipping a radius around our center, use <
            //otherwise use <=
            if (isSkipping) {
                if (Math.abs(spiralX) < Math.abs(spiralZ) && (spiralX != spiralZ || spiralX >= 0))
                    spiralX += ((spiralZ >= 0) ? steps : -steps);
                else
                    spiralZ += ((spiralX >= 0) ? -steps : steps);
            } else {
                if (Math.abs(spiralX) <= Math.abs(spiralZ) && (spiralX != spiralZ || spiralX >= 0))
                    spiralX += ((spiralZ >= 0) ? steps : -steps);
                else
                    spiralZ += ((spiralX >= 0) ? -steps : steps);
            }
        }
    }

    @Override
    public void onDisable() {
        MessageUtils.sendMessage("Stopped at "+ x + ", " + z);
    }

}